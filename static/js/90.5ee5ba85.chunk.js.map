{"version":3,"file":"static/js/90.5ee5ba85.chunk.js","mappings":"oPACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA4E,oBAA5E,EAAuG,mBAAvG,EAAsI,wB,SC4CtI,EAxCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAWJ,GAFhB,OAERK,EAFQ,OAGdN,EAAQM,EAAKP,MAHC,gDAKdQ,QAAQC,IAAI,KAAMC,SALJ,yDAAH,qDASfL,GACD,GAAE,CAACH,IAEJ,IAAMS,EAASX,EAAKY,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACtB,gBAAIC,UAAWC,EAAf,UACGF,IACC,gBACEG,IAAG,0CAAqCH,GACxCC,UAAWC,EACXE,IAAI,MAGR,cAAGH,UAAWC,EAAd,SAAyBJ,KACzB,eAAGG,UAAWC,EAAd,wBAAyCH,OATbZ,EADR,IAcxB,OACE,+BACE,eAAIc,UAAWC,EAAf,SACqB,IAAlBN,EAAOS,OAAe,wCAA0CT,KAIxE,ECrCD,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,C,sLCFKU,E,OAAUC,EAAAA,OAAa,CAC3BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAY,mCAAG,WAAMC,GAAN,yFACHP,EAAQQ,IAAI,eAAgB,CACjDL,OAAQ,CACNI,MAAAA,KAHsB,uBAClBrB,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZuB,EAAgB,mCAAG,sGACPT,EAAQQ,IAAI,iBADL,uBACtBtB,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBwB,EAAY,mCAAG,WAAM7B,GAAN,yFACHmB,EAAQQ,IAAR,gBAAqB3B,IADlB,uBAClBK,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZD,EAAU,mCAAG,WAAMJ,GAAN,yFACDmB,EAAQQ,IAAR,iBAAsB3B,EAAtB,aADC,uBAChBK,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVyB,EAAU,mCAAG,WAAM9B,GAAN,yFACDmB,EAAQQ,IAAR,iBAAsB3B,EAAtB,aADC,uBAChBK,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/modules/Cast/Cast.module.css?ce81","modules/Cast/Cast.jsx","pages/CastPage.jsx","shared/services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__iUE7c\",\"item\":\"Cast_item__iDaXp\",\"photo\":\"Cast_photo__oqgJb\",\"name\":\"Cast_name__FDwnw\",\"character\":\"Cast_character__vuBWQ\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from '../../shared/services/API';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const data = await getCredits(id);\n        setCast(data.cast);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchCast();\n  }, [id]);\n\n  const castes = cast.map(({ id, name, character, profile_path }) => (\n    <li className={css.item} key={id}>\n      {profile_path && (\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n          className={css.photo}\n          alt=\"\"\n        ></img>\n      )}\n      <p className={css.name}>{name}</p>\n      <p className={css.character}>Character: {character}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      <ul className={css.list}>\n        {castes.length === 0 ? \"We don't have any cast for this movie\" : castes}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import Cast from '../modules/Cast/Cast';\n\nconst CastPage = () => {\n  return <Cast />;\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst instans = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '15b081f5b9030a29148fdb73ac896fef',\n    language: 'en-US',\n  },\n});\n\nexport const searchMovies = async query => {\n  const { data } = await instans.get('search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getPopularMovies = async () => {\n  const { data } = await instans.get('movie/popular');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instans.get(`movie/${id}`);\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await instans.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instans.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["useState","cast","setCast","id","useParams","useEffect","fetchCast","getCredits","data","console","log","message","castes","map","name","character","profile_path","className","css","src","alt","length","instans","axios","baseURL","params","api_key","language","searchMovies","query","get","getPopularMovies","getMovieById","getReviews"],"sourceRoot":""}